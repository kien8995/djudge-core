#include <cstdio>
#include <algorithm>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <list>
#include <stack>
#include <queue>
#include <deque>
#include <cmath>
#include <iostream>
#include <sstream>

using namespace std;

typedef vector<int> VI;
typedef vector<VI> VII;
typedef vector<string> VS;
typedef long long lint;
typedef long long LL;
typedef string ST;

#define VAR(v,n) typeof(n) v=(n)
#define REP(i,n) for(int i=0; i<(n); i++)
#define FOR(i,a,b) for(int i=(a); i<=(b); i++)
#define FORD(i,a,b) for(int i=(a); i>=(b); i--)
#define FOREACH(i,c) for(VAR(i,(c).begin()); i!=(c).end(); i++)

#define PB push_back
#define PF push_front
#define PI pair<int,int>
#define MP make_pair
#define FI first
#define SE second
#define VR vector
#define IT iterator
#define ALL(x) (x).begin(),(x).end()
#define SIZE(x) ((int)(x).size())
#define CLEAR(c,w) memset(c,w,sizeof(c))

string T[3][11]={
{"Kamen","Rock","Pierre","Stein","Ko","Koe","Sasso","Roccia","Guu","Kamien","Piedra"},
{"Nuzky","Scissors","Ciseaux","Schere","Ollo","Olloo","Forbice","Choki","Nozyce","Tijera","dupa1"},
{"Papir","Paper","Feuille","Papier","Papir","Carta","Rete","Paa","Papier","Papel","dupa2"}
};

char n1[1000],n2[1000],c1[1000],c2[1000];
char buf[10000];
char a1[1000],a2[1000];

int f(string a,string b) {
	int i1,i2;
	REP(i,3) REP(j,11) {
		if (T[i][j]==a) i1=i;
		if (T[i][j]==b) i2=i;
	}
	if (i1==i2) return 0;
	if (i1==0 && i2==1) return -1;
	if (i1==1 && i2==2) return -1;
	if (i1==2 && i2==0) return -1;
	return 1;
}

int main() {
	int game=1,w;
	scanf("%s %s",c1,n1);
	scanf("%s %s\n",c2,n2);
	gets(buf);		
	while (buf[0]!='.') {
		int p1,p2;
		p1=p2=0;
		while (buf[0]!='-' && buf[0]!='.') {
			sscanf(buf,"%s %s",a1,a2);
			w=f(a1,a2);
			if (w==-1) p1++;
			else if (w==1) p2++;
			gets(buf);
		}
		printf("Game #%d:\n",game);
		printf("%s: %d %s\n",n1,p1,p1==1?"point":"points");
		printf("%s: %d %s\n",n2,p2,p2==1?"point":"points");
		if (p1==p2) printf("TIED GAME\n");
		else if (p1>p2) printf("WINNER: %s\n",n1);
		else printf("WINNER: %s\n",n2);
		printf("\n");
		scanf("%s %s",c1,n1);
		scanf("%s %s\n",c2,n2);
		gets(buf);
		game++;
	}
	return 0;
}
