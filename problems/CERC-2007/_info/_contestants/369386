#include <cstdio>
#include <string>
#include <vector>
#include <utility>

using namespace std;

/*struct par
{
  int x;
  int y;
}*/

typedef vector<vector<pair<int, int> > > vp;

vp iv(11);

vector<vector<int> > hatv(11);

void makeiv()
{
  for (int i=2; i<11; ++i)
  {
    int x(0), y(0), z;
    iv[i].push_back(make_pair(x, y));
    hatv[i].push_back(1);
    hatv[i].push_back(1);
    while (x>=-1000000 || y<=1000000)
    {
      z=y*(-i);
      y=x*(-i)+(i-1);
      x=z;
      iv[i].push_back(make_pair(x, y));
      hatv[i].push_back(hatv[i][hatv[i].size()-1]*(-i));
    }
  }
}

string to(int b, int n)
{
  int i;
  string r;
  for (i=0; iv[b][i].first>n || iv[b][i].second<n; ++i);
  for (int j=i; j>0; --j)
  {
    int k;
    for (k=0; iv[b][j-1].first>n || iv[b][j-1].second<n; ++k)
    {
//      printf("%d: %d..%d -%d\n", n, iv[b][j-1].first, iv[b][j-1].second, hatv[b][j]);
      n-=hatv[b][j];
//      getchar();
    }
    r+=(char)('0'+k);
  }
  return r;
}

int from(int b, string n)
{
  int r(0);
  for (unsigned int i=0; i<n.size(); ++i)
  {
    r*=-b;
    r+=n[i]-'0';
  }
  return r;
}

int main()
{
  makeiv();
  char t; int n; int b; char s[30];
  while (t=getchar(), t!='e')
  {
    if (t=='t')
    {
//      char s2[200];
//      scanf("o-%d %d\n", &b, &n);
//      printf("o-%d %d\n", b, n);
      scanf("o-%d %d\n", &b, &n);
      string r=to(b, n);
      printf("%s\n", r.c_str());
    }
    else
    {
      scanf("rom-%d %s\n", &b, s);
      n=from(b, string(s));
      printf("%d\n", n);
    }
  
  }

  return 0;
}
