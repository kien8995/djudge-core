#include <stdio.h>
#include <algorithm>
#include <string>
#include <vector>
#include <iostream>
using namespace std;

typedef struct {
	int x; int y;
	int v; int n;
	int id;
} tocka;

int n;


bool cmp1( tocka a, tocka b ) {
	if (a.y<b.y) { return 1; }
	else if (a.y==b.y) {
		return a.x<b.x;
	} else { return 0; }
}

bool cmp2( tocka a, tocka b ) {
	if (a.x<b.x) { return 1; }
	else if (a.x==b.x) {
		return a.y<b.y;
	} else { return 0; }
}

bool cmp3(tocka a, tocka b) {
	return a.id<b.id;
}


int main(void){
	int i,j,st,start,bi;
	string rez;
	vector<tocka> t,t2;
	tocka dummy;

	while (true) {
		rez="";
		scanf("%d",&n);
		if (n==0) { break; }
		t.clear();
		for (i=0;i<n;i++) { 
			t.push_back(dummy);
			scanf("%d %d",&t[i].x,&t[i].y); t[i].v=0; t[i].n=0; t[i].id=i;
		}
		
		//vodoravno
		sort(t.begin(),t.end(),cmp1);
		
		for (i=0;i<n;i+=2) {
			t[i].v=t[i+1].id;
			t[i+1].v=t[i].id;
		}
		
		//navpicno
		sort(t.begin(),t.end(),cmp2);
		
		for (i=0;i<n;i+=2) {
			t[i].n=t[i+1].id;
			t[i+1].n=t[i].id;
		}
		
		//sort po id-jih
		sort(t.begin(),t.end(),cmp3);
		
		bi=0;
		for (i=1;i<n;i++) {
			if (t[i].y>t[bi].y) { bi=i; }
			else if (t[i].y==t[bi].y) {
				if (t[i].x<t[bi].x) { bi=i; }
			}
		}
		i=t[bi].v; j=bi;
		
		st=0;
		while (i!=bi) {
			if (i==0) { start=st; }
			if (t[i].v!=j) {
				if (t[i].y>t[j].y) { rez+="N"; }
				else { rez+="S"; }
				j = i;
				i = t[i].v;
			} else {
				if (t[i].x>t[j].x) { rez+="E"; }
				else { rez+="W"; }
				j = i;
				i = t[i].n;
			}
			//printf("i=%d j=%d\n",i,j);
			st++;
			//break;
		}
		
		if (i==0) { start=st; }
		if (t[i].v!=j) {
			if (t[i].y>t[j].y) { rez+="N"; }
			else { rez+="S"; }
			j = i;
			i = t[i].v;
		} else {
			if (t[i].x>t[j].x) { rez+="E"; }
			else { rez+="W"; }
			j = i;
			i = t[i].n;
		}
		//printf("i=%d j=%d\n",i,j);
		
		
		//cout << rez << endl;
		
		start++;
		for (i=0;i<n;i++) {
			printf("%c",rez[(i+start)%n]);
		}
		printf("\n");
	}
	return 0;
}
