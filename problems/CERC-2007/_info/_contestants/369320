#include<vector>
#include<set>
#include<map>
#include<string>
#include<iostream>
#include<sstream>
#include<deque>
using namespace std;
bool mat[103][103][2][2][2][2];
char svet[103][103];
struct stav
{
  int r,c,dist;
  bool kl[4];
};
stav mstav(int r,int c,int dist,bool a,bool b,bool cc,bool d)
{
  stav tmp={r,c,dist,a,b,cc,d};
  return tmp;
}
int dir[4][2]={-1,0, 1,0 ,0,1, 0,-1};
int main()
{
  int r,c;
  int getnum[256];
  getnum['b']=0;
  getnum['y']=1;
  getnum['r']=2;
  getnum['g']=3;
  while(cin>>r>>c,r+c)
  {
    getchar();
    int sr,sc;
    for (int i=0;i<r;i++)
    {
	for (int j=0;j<c;j++)
	{
	  svet[i][j]=getchar();
	  if (svet[i][j]=='*')
	    sr=i,sc=j,svet[i][j]='.';
	}
	getchar();
    }
    memset(mat,0,sizeof(mat));
    deque<stav> fr;
    fr.push_back(mstav(sr,sc,0,0,0,0,0));
    int result=-1;
    while(fr.size()>0)
    {
        
	stav top=*fr.begin();
	fr.pop_front();
	if (top.r<0||top.r>=r||top.c<0||top.c>=c)
	  continue;
	if (mat[top.r][top.c][top.kl[0]][top.kl[1]][top.kl[2]][top.kl[3]]==1)
          continue;
	mat[top.r][top.c][top.kl[0]][top.kl[1]][top.kl[2]][top.kl[3]]=1;
	if (svet[top.r][top.c]=='#')
	  continue;
	if (svet[top.r][top.c]=='X')
	{
	  result=top.dist;
	  break;
	}
//	cout<<top.r<<" "<<top.c<<endl;
	if (svet[top.r][top.c]!='.')
	{
//	  cout<<"ukladam "<<svet[top.r][top.c]<<"  "<<getnum[svet[top.r][top.c]]<<endl;
	  if (islower(svet[top.r][top.c]))
  	    top.kl[getnum[svet[top.r][top.c]]]=1;
	  else
	    if (top.kl[getnum[tolower(svet[top.r][top.c])]]==0)
	      continue;
	}
//	cout<<"bla "<<top.r<<" "<<top.c<<endl;
	for (int i=0;i<4;i++)
	{
	  int nr=top.r+dir[i][0],nc=top.c+dir[i][1];
	  fr.push_back(mstav(nr,nc,top.dist+1,top.kl[0],top.kl[1],top.kl[2],top.kl[3]));
	}
	  
    }	
    if (result==-1)
      cout<<"The poor student is trapped!"<<endl;
    else
      cout<<"Escape possible in "<<result<<" steps."<<endl;
  }

  return 0;
}
