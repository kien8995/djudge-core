type valami=record
      ko,papir,ollo,ko2,papir2,ollo2:string;
     end;
     TRec=record
      name:string;
      lang,point:longint;
     end; 
var szo:array [1..9] of valami;
    tv:array [1..2] of TRec;
    i,j,k,l,m,n,o,p,q,m1,m2:longint;
    sl:string[3];
    s,s1,s2:string;
begin
   szo[1].ko:='Kamen';
   szo[1].ko2:='xxx';
   szo[1].ollo:='Nuzky';
   szo[1].ollo2:='xxx';
   szo[1].papir:='Papir';
   szo[1].papir2:='xxx';
   szo[2].ko:='Rock';
   szo[2].ko2:='xxx';
   szo[2].ollo:='Scissors';
   szo[2].ollo2:='xxx';
   szo[2].papir:='Paper';
   szo[2].papir2:='xxx';
   szo[3].ko:='Pierre';
   szo[3].ko2:='xxx';
   szo[3].ollo:='Ciseaux';
   szo[3].ollo2:='xxx';
   szo[3].papir:='Feuille';
   szo[3].papir2:='xxx';
   szo[4].ko:='Stein';
   szo[4].ko2:='xxx';
   szo[4].ollo:='Schere';
   szo[4].ollo2:='xxx';
   szo[4].papir:='Papier';
   szo[4].papir2:='xxx';
   szo[5].ko:='Ko';
   szo[5].ko2:='Koe';
   szo[5].ollo:='Ollo';
   szo[5].ollo2:='Olloo';
   szo[5].papir:='Papir';
   szo[5].papir2:='xxx';
   szo[6].ko:='Sasso';
   szo[6].ko2:='Roccia';
   szo[6].ollo:='Forbice';
   szo[6].ollo2:='xxx';
   szo[6].papir:='Carta';
   szo[6].papir2:='Rete';
   szo[7].ko:='Guu';
   szo[7].ko2:='xxx';
   szo[7].ollo:='Choki';
   szo[7].ollo2:='xxx';
   szo[7].papir:='Paa';
   szo[7].papir2:='xxx';
   szo[8].ko:='Kamien';
   szo[8].ko2:='xxx';
   szo[8].ollo:='Nozyce';
   szo[8].ollo2:='xxx';
   szo[8].papir:='Papier';
   szo[8].papir2:='xxx';
   szo[9].ko:='Piedra';
   szo[9].ko2:='xxx';
   szo[9].ollo:='Tijera';
   szo[9].ollo2:='xxx';
   szo[9].papir:='Papel';
   szo[9].papir2:='xxx';
   o:=0;
   repeat
    inc(o);
    readln(sl,tv[1].name);
    if sl='cs ' then tv[1].lang:=1;
    if sl='en ' then tv[1].lang:=2;
    if sl='fr ' then tv[1].lang:=3;
    if sl='de ' then tv[1].lang:=4;
    if sl='hu ' then tv[1].lang:=5;
    if sl='it ' then tv[1].lang:=6;
    if sl='jp ' then tv[1].lang:=7;
    if sl='pl ' then tv[1].lang:=8;
    if sl='es ' then tv[1].lang:=9;
    tv[1].point:=0;
    readln(sl,tv[2].name);
    if sl='cs ' then tv[2].lang:=1;
    if sl='en ' then tv[2].lang:=2;
    if sl='fr ' then tv[2].lang:=3;
    if sl='de ' then tv[2].lang:=4;
    if sl='hu ' then tv[2].lang:=5;
    if sl='it ' then tv[2].lang:=6;
    if sl='jp ' then tv[2].lang:=7;
    if sl='pl ' then tv[2].lang:=8;
    if sl='es ' then tv[2].lang:=9;
    tv[2].point:=0;
{    writeln(tv[1].name,' ',tv[1].lang);
    writeln(tv[2].name,' ',tv[2].lang);}
    repeat
     readln(s);
     if length(s)=1 then break;
     s1:=copy(s,1,pos(' ',s)-1);
     s2:=copy(s,pos(' ',s)+1,30);
     if (s1=szo[tv[1].lang].ko) or (s1=szo[tv[1].lang].ko2) then m1:=1;
     if (s1=szo[tv[1].lang].ollo) or (s1=szo[tv[1].lang].ollo2) then m1:=2;
     if (s1=szo[tv[1].lang].papir) or (s1=szo[tv[1].lang].papir2) then m1:=3;
     if (s2=szo[tv[2].lang].ko) or (s2=szo[tv[2].lang].ko2) then m2:=1;
     if (s2=szo[tv[2].lang].ollo) or (s2=szo[tv[2].lang].ollo2) then m2:=2;
     if (s2=szo[tv[2].lang].papir) or (s2=szo[tv[2].lang].papir2) then m2:=3;
     if (m1=1) and (m2=2) then inc(tv[1].point);
     if (m1=1) and (m2=3) then inc(tv[2].point);
     if (m1=2) and (m2=1) then inc(tv[2].point);
     if (m1=2) and (m2=3) then inc(tv[1].point);
     if (m1=3) and (m2=1) then inc(tv[1].point);
     if (m1=3) and (m2=2) then inc(tv[2].point);
    until (s[1]='-') or (s[1]='.');
    writeln('Game #',o,':');
    if tv[1].point=1 then writeln(tv[1].name,': 1 point') else writeln(tv[1].name,': ',tv[1].point,' points');
    if tv[2].point=1 then writeln(tv[2].name,': 1 point') else writeln(tv[2].name,': ',tv[2].point,' points');
    if tv[1].point=tv[2].point then writeln('TIED GAME');
    if tv[1].point>tv[2].point then writeln('WINNER: ',tv[1].name);
    if tv[2].point>tv[1].point then writeln('WINNER: ',tv[2].name);
    writeln;
   until s[1]='.';
end.