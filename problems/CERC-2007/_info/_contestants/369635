#include <iostream>
#include <cstdio>
#include <set>
#include <map>
#include <vector>
#include <utility>
#include <algorithm>
#include <complex>
#include <queue>
#include <string>
#include <cstdlib>
#include <cstring>
using namespace std;

typedef pair<int, int> PI;
#define REP(i,n) for (int i=0; i<int(n); i++)
#define FOR(i,a,n) for (int i=a; i<int(n); i++)
#define FORD(i,n) for (int i=int(n)-1; i>=0; i--)
#define FOREACH(it,a) for (__typeof(a.begin()) it=a.begin(); it!=a.end(); it++)
#define ll long long

string kladne(int base,ll x) {
//    cout<<base<<" "<<x<<endl;
    if (x == 0) return "";
    ll mod = 0;
    while ((x - mod) % base != 0) mod++;
    return kladne(base, -(x-mod)/base)+char('0'+mod);
}
ll from(ll base,ll nasob,ll x) {        
    if (x==0) return 0;
    return (x%10)*nasob+from(base,-nasob*base,x/10);
}
int main() {
    char oper[15];
    string op;
    int base;
    ll cis;
    
    while (scanf("%[^-\n]-%d %lld\n",oper,&base,&cis)==3) {
//        cout<<": "<<oper<<" "<<base<<" "<<cis<<endl;
        op=oper;        
        if (op=="to") {
            if (cis==0) printf("0\n");
            else printf("%s\n",kladne(base,cis).c_str());
        } else if (op=="from") {
            if (cis==0) printf("0\n");
            else printf("%lld\n",from(base,1,cis));
        }
    }


} 
