#include <cstdio>
#include <cstdlib>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;
#define REP(i,n)	for(int i=0,_n=(n);i<_n;++i)
#define REPD(i,n)	for(int i=(n-1);i>=0;--i)
#define FOR(i,s,k)	for(int i=(s),_k=(k);i<=_k;++i)
#define FORD(i,s,k)	for(int i=(s),_k=(k);i>=_k;--i)
#define FORE(it,q)	for(__typeof((q).begin())it=(q).begin();it!=(q).end();++it)
#define FORED(it,q)	for(__typeof((q).rbegin())it=(q).rbegin();it!=(q).rend();++it)
#define FOREACH(it,f,l)	for(__typeof(f)it=f;it!=l;++it)
#define FOREACHD(it,f,l)	for(__typeof(f)it=l;it--!=f;)


bool testcase() {
	int R,C;
	int tab[20][20],t2[20][20];
	char level[20];
	scanf("%d%d",&R,&C);
	if(R==0 && C==0) return 0;
	REP(i,R) {
		scanf("%s",level);
		REP(j,C) if(level[j]=='.') tab[i][j]=0;
				 else tab[i][j]=1;
	}
//	REP(i,R) { REP(j,C) printf("%d", tab[i][j]); printf("\n"); }
	int mnodp=1000,odp;
	FOR(i,0,(1<<C)-1) {
		odp=0;
		REP(a,R) REP(b,C) t2[a][b]=tab[a][b];
//		printf("i: %d\n", i);
		REP(j,C) if((i & (1<<j)) != 0) {
//			printf(".. %d\n", j);
			++odp;
			t2[0][j] ^= 1;
			if(j>0) t2[0][j-1] ^= 1;
			if(j<C-1) t2[0][j+1] ^= 1;
			t2[1][j] ^= 1;
		}
//		printf("i: %d\nt2[0][j]: ", i);
//		REP(j,C) printf("%d", t2[0][j]);
//		printf("\n");

		FOR(r,1,R-1) {
			FOR(c,0,C-1) {
				if(t2[r-1][c]==1) {
					t2[r][c] ^= 1;
					if(c>0) t2[r][c-1] ^= 1;
					if(c<C-1) t2[r][c+1] ^= 1;
					t2[r-1][c] ^= 1;
					if(r<R-1) t2[r+1][c] ^= 1;
					++odp;
				}
			}
//			REP(j,C) printf("%d", t2[r-1][j]);
//			printf("\n");
		}
		bool ok=1;
//		printf("odp: %d, koniec:\n", odp);
//		REP(j,C) printf("%d", t2[R-1][j]); printf("\n");
		REP(j,C) if(t2[R-1][j]!=0) { ok=0; break; }
		if(ok) mnodp <?= odp;
	}
	if(mnodp==1000) printf("Damaged billboard.\n");
	else printf("You have to tap %d tiles.\n", mnodp);

	return 1;
}


int main() {
	while(testcase());
	return 0;
}

