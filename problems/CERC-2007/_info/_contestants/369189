#include <cstdio>
#include <iostream>
#include <algorithm>
#include <iterator>
#include <string>
#include <vector>
#include <cmath>
#include <set>
#include <map>
#include <queue>
#include <numeric>
#include <list>
#include <cstring>
#include <cctype>
#include <sstream>

using namespace std;

typedef long long LL;
typedef long double LD;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef vector<PII> VPII;

#define MP make_pair
#define ST first
#define ND second
#define PB push_back
#define FOR(i,a,b) for( int i=(a); i<=(b); ++i)
#define FORD(i,a,b) for( int i=(a); i>=(b); --i)
#define REP(i,n) for(int i=0; i<(n); ++i)
#define ALL(X) (X).begin(),(X).end()
#define SIZE(X) (int)(X).size()
#define FOREACH(it,X) for(__typeof((X).begin()) it=(X).begin(); it!=(X).end(); ++it)

int n,m;
const int N=20;
const int INF=1000000000;
char plansza[N][N];
int pom[N][N];

int dx[]={0,0,1,-1,0};
int dy[]={1,-1,0,0,0};

void wywroc(int i,int j){
	REP(ruch,5){
		int ni=i+dx[ruch];
		int nj=j+dy[ruch];
		if (ni>=0 && ni<n && nj>=0 && nj<m) pom[ni][nj]^=1;
	}
}

int main(){
	while (scanf("%d %d",&n,&m),n+m){
		REP(i,n) scanf("%s",plansza[i]);
		int res=INF;
		int ile=1<<m;
		REP(mask,ile){
			int acc=0;
			REP(i,n) REP(j,m) pom[i][j]=plansza[i][j]=='X';
			REP(j,m) if ((1<<j)&mask) acc++,wywroc(0,j);
			REP(i,n-1) REP(j,m) if (pom[i][j]) acc++,wywroc(i+1,j);
			int ok=1;
			REP(j,m) if (pom[n-1][j]) ok=0;
			if (ok) res=min(res,acc);
		}
		if (res==INF) puts("Damaged billboard.");
		else printf("You have to tap %d tiles.\n",res);
	}
	return 0;
}
