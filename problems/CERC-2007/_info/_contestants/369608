#include <cstdio>

#define REP(a, b) for(int a=0; a<(b); a++)

#define min(a, b) ((a)<(b) ? (a) : (b))

char buf[200];
char plansza[20][20];

int r, c;

int dx[5] = {0, 0, 0, 1, -1};
int dy[5] = {0, 1, -1, 0, 0};

#define INF 100000

void przelacz(int x, int y) {
	REP(i, 5) if(x+dx[i]>=0 && x+dx[i]<r && y+dy[i]>=0 && y+dy[i]<c) {
		if (plansza[x+dx[i]][y+dy[i]]=='.')
			plansza[x+dx[i]][y+dy[i]] = 'X';
		else plansza[x+dx[i]][y+dy[i]] = '.';
	}
}

int solve(int x, int y) {
	if (x==r-1){
		REP(i, c) if (plansza[x][i]=='X') return INF;
		return 0;
	}
	if (plansza[x][y]=='.') {
		return solve((y==c-1)?x+1:x, (y+1)%c);
	}
	if (x==0) {
		przelacz(x+1, y);
		int ret = solve((y==c-1)?x+1:x, (y+1)%c)+1;
		przelacz(x+1, y);
		if (y!=c-1) {
			przelacz(x, y+1);
			ret = min(ret, solve((y==c-1)?x+1:x, (y+1)%c)+1);
			przelacz(x, y+1);
		}
		if (y!=0) {
			przelacz(x, y);
			przelacz(x+1, y-1);
			ret = min(ret, solve((y==c-1)?x+1:x, (y+1)%c)+2);
			przelacz(x, y);
			przelacz(x+1, y-1);
		} else {
			przelacz(x, y);
			ret = min(ret, solve((y==c-1)?x+1:x, (y+1)%c)+1);
			przelacz(x, y);
		}
		return ret;
	}else {
		przelacz(x+1, y);
		int ret = solve((y==c-1)?x+1:x, (y+1)%c);
		przelacz(x+1, y);
		return ret+1;
	}
}

int solve2(int y) {
	if (y==c-1){
		if(plansza[0][y]=='X') return INF; 
		return 0;
	}
	if (plansza[0][y]=='.') return solve2(y+1);
	przelacz(0, y+1);
	int ret = solve2(y+1);
	przelacz(0, y+1);
	if(y==0) {
		przelacz(0, 0);
		ret = min(ret, solve2(y+1));
		przelacz(0, 0);
	}
	return ret+1;
}

int main() {
	while(true) {
		fgets(buf, 200, stdin);
		sscanf(buf, "%d%d", &r, &c);
		if(r==0 && c==0) break;
		REP(i, r) fgets(plansza[i], 20, stdin);
		if (r==1) {
			int res = solve2(0);
			if (res>=INF) {
				printf("Damaged billboard.\n");
			} else
				printf("You have to tap %d tiles.\n", res);
		}else{
		int res = solve(0, 0);
		if (res>=INF) {
			printf("Damaged billboard.\n");
		} else
			printf("You have to tap %d tiles.\n", res);
		}
		fgets(buf, 200, stdin);
	}
	return 0;
}
