#include <cstdio>
#include <algorithm>
using namespace std;
int f = 0;
struct point
{
	
	int x;
	int y;
	int nr;
	int n[2];
	int clock;
	bool operator<(const point & a) const
	{
		switch(f)
		{
			case 0:
				if(x!=a.x)
					return x<a.x;
				else return y<a.y;
			case 1:
				if(y!=a.y)
					return y<a.y;
				else return x<a.x;
			case 2:
				return nr<a.nr;
		}
	}
} tab[1000];

int skok[1000];

void getskok(int n)
{
	for(int i = 0; i<n; i++) skok[tab[i].nr]=i;
}
int jeden()
{
	int N; scanf("%d", &N);
	if(N==0) return 0;
	
	for(int i = 0; i<N; i++)
	{
		scanf("%d%d", &tab[i].x, &tab[i].y);
		tab[i].nr = i;tab[i].clock=-1;
	}
	
	for(f = 0;f<2; f++)
	{
		sort(tab,tab+N);
		if(f==0) tab[0].clock = 0;
		for(int i = 0; i<N; i+=2)
		{
			tab[i].n[f]=tab[i+1].nr;
			tab[i+1].n[f]=tab[i].nr;
		}
	}

	//return 1;
	f=0;
	sort(tab,tab+N);getskok(N);
	int p = 0;
	do
	{
		
		//printf("clock %d/%d %d ::%d %d\n", p,tab[p].clock,tab[p].n[tab[p].clock],tab[p].n[0], tab[p].n[1]);
		tab[skok[tab[p].n[tab[p].clock]]].clock = !tab[p].clock;
		p = skok[tab[p].n[tab[p].clock]];
	}while(p);
	
////
/*	f=2; sort(tab,tab+N);
	for(int i = 0; i<N; i++)
	{
		printf("%d -> %d %d: %d %d/%d\n", i, tab[i].x, tab[i].y, tab[i].n[0], tab[i].n[1], tab[i].clock);
	}	
	return 1;*/
////
	f=2;
	sort(tab,tab+N);getskok(N);
	p = 0;
	do
	{
		//printf("%d: %d %d/%d\n", tab[p].nr, tab[p].n[0], tab[p].n[1],tab[p].clock);
		int x = tab[skok[tab[p].n[tab[p].clock]]].x;
		int y = tab[skok[tab[p].n[tab[p].clock]]].y;
		char c;
		if(x>tab[p].x) c = 'E';
		else if(x<tab[p].x) c = 'W';
		else if(y>tab[p].y) c = 'N';
		else if(y<tab[p].y) c = 'S';
		putchar(c);
		p = skok[skok[tab[p].n[tab[p].clock]]];
	}while(p);
	putchar('\n');
	return 1;
}


int main()
{
	while(jeden());
	return 0;
}
