import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.io.IOException;


public class sort
{
  public static void main(String[] args)
  {
    try
    {
      BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
      PrintStream out = System.out;
      
      boolean finished = false;
      while (!finished)
      {
        String line = in.readLine();
        int N = Integer.parseInt(line);
        if (N==0)
          finished = true;
        else
        {
          int array[] = new int[N];
          int pos[] = new int[N];
          line = in.readLine();
          String parts[] = line.split(" ");
          for (int i = 0; i < N; i++)
          {
            array[i] = Integer.parseInt(parts[i]);            
            pos[i] = i+1;
          }
          for (int i = 0; i < N; i++)
            for (int j = 0; j < N-i-1; j++)
            {
              if (array[j] > array[j+1])
              {
                int temp = array[j];
                array[j] = array[j+1];
                array[j+1] = temp;
                temp = pos[j];
                pos[j] = pos[j+1];
                pos[j+1] = temp;
              }
            }
//          for (int i = 0; i < N; i++)
//            out.print(pos[i] + " ");
//          out.println();
          
          for (int i = 0; i < N; i++)
          {
            int curpos = pos[i];
            out.print(curpos);
            if (i < N-1)
              out.print(" ");
            int a = curpos + i + 1;
            for (int j = i; j < N; j++)
              if (pos[j] <= curpos)
                pos[j] = a - pos[j];
//            for (int k = 0; k < N; k++)
//              out.print(pos[k] + " ");
//            out.println();
          }
          out.println();
        }
      }
    }
    catch (IOException e)
    {
      e.printStackTrace();
    }
  }
}