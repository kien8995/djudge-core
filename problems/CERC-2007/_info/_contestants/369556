#include <cstdio>
#include <algorithm>
#include <vector>
#include <utility>

using namespace std;

#define PB push_back
#define MP make_pair
#define FI first
#define SE second
#define PII pair<int,int>

int main()
{
	while(1) {
		int N;
		scanf("%d", &N);
		if(!N)
			break;
		int x,y;
		vector<PII> punkty;
		vector<PII> pion[20000+1];
		vector<PII> poz[20000+1];
		scanf("%d %d", &x, &y);
		punkty.PB(MP(x,y));
		pion[x+10000].PB(MP(y,0));
		poz[y+10000].PB(MP(x,0));
		for(int i=1; i<N; i++) {
			scanf("%d %d", &x, &y);
			punkty.PB(MP(x,y));
			pion[x+10000].PB(MP(y,i));
			poz[y+10000].PB(MP(x,i));
		}
		PII sasiedzi[1000];
		for(int i=-10000; i<=10000; i++) {
			sort(pion[i+10000].begin(), pion[i+10000].end());
			sort(poz[i+10000].begin(), poz[i+10000].end());
		}
		for(int i=-10000; i<=10000; i++) {
			for(int j=0; j<(int)pion[i+10000].size(); j+=2) {
				int a = pion[i+10000][j].SE;
				int b = pion[i+10000][j+1].SE;
				sasiedzi[a].FI = b;
				sasiedzi[b].FI = a;
			}
			for(int j=0; j<(int)poz[i+10000].size(); j+=2) {
				int a = poz[i+10000][j].SE;
				int b = poz[i+10000][j+1].SE;
				sasiedzi[a].SE = b;
				sasiedzi[b].SE = a;
			}
		}
		vector<int> P;
		int color[1000] = {0};
		int minx;
		for(minx=-10000; minx<=10000; minx++)
			if(pion[minx+10000].size())
				break;
		int start = pion[minx+10000][0].SE;
		int u = start;
		while(!color[u]) {
			color[u] = 1;
			P.PB(u);
			int a = sasiedzi[u].FI;
			int b = sasiedzi[u].SE;
			if(!color[a])
				u=a;
			else
				u=b;
		}
		for(start=0; start<(int)P.size(); start++)
			if(P[start] == 0)
				break;
		for(int i=start; i<N; i++) {
			if(punkty[P[i]].SE < punkty[P[(i+1)%N]].SE)
				printf("N");
			else if(punkty[P[i]].SE > punkty[P[(i+1)%N]].SE)
				printf("S");
			else if(punkty[P[i]].FI < punkty[P[(i+1)%N]].FI)
				printf("E");
			else if(punkty[P[i]].FI > punkty[P[(i+1)%N]].FI)
				printf("W");
		}
		for(int i=0; i<start; i++) {
			if(punkty[P[i]].SE < punkty[P[(i+1)%N]].SE)
				printf("N");
			else if(punkty[P[i]].SE > punkty[P[(i+1)%N]].SE)
				printf("S");
			else if(punkty[P[i]].FI < punkty[P[(i+1)%N]].FI)
				printf("E");
			else if(punkty[P[i]].FI > punkty[P[(i+1)%N]].FI)
				printf("W");
		}
		printf("\n");
	}
	return 0;
}
