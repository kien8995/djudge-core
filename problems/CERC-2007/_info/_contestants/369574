#include <stdio.h>
#include <stdlib.h>
using namespace std;

struct point{
	int id, x, y, h, v;
} p[1024];

int sxy(const void* a, const void * b)
{
	if (((point*) a)->x>((point*)b)->x)
		return 1;
	else if (((point*)a)->x<((point*)b)->x)
	{
		return -1;
	}else if (((point*)a)->y>((point*)b)->y)
	{
		return 1;
	}
	else return -1;
}
int syx(const void* a, const void * b)
{
	if (((point*) a)->y>((point*)b)->y)
		return 1;
	else if (((point*)a)->y<((point*)b)->y)
	{
		return -1;
	}else if (((point*)a)->x>((point*)b)->x)
	{
		return 1;
	}
	else return -1;
}


int main()
{
int count ;
int hn[1024], vn[1024];
		while (scanf("%d", &count), count)
		{
			for(int i=0; i< count ; i++)
			{
				scanf("%d %d", &p[i].x, &p[i].y);
				p[i].id=i;
			}
			point tmp[1024];
			for(int i=0; i< count ; i++)
			{
				tmp[i]=p[i];
			}
			qsort(tmp, count, sizeof(point), &sxy);
			/*for(int i=0; i< count ; i++)
			{
				printf("%d ", tmp[i].id);
			}*/
			for(int i=0; i<count; i+=2)
			{
				hn[tmp[i].id] = tmp[i+1].id;
				hn[tmp[i+1].id] = tmp[i].id;
			}
			
			qsort(tmp, count, sizeof(point), &syx);
			for(int i=0; i<count; i+=2)
			{
				vn[tmp[i].id] = tmp[i+1].id;
				vn[tmp[i+1].id] = tmp[i].id;
				
			}
			/*
			for(int i=0; i< count ; i++)
			{
				printf("%d ", tmp[i].id);
			}
			for(int i=0; i< count ; i++)
			{
				printf("%d ", vn[i]);
			}
			for(int i=0; i< count ; i++)
			{
				/printf("%d ", hn[i]);
			}*/
			int smer=0;
			int c=0;
			int akt=tmp[0].id;
			int res[1024];
			int s=0;
			while(c<count)
			{
				//printf("%d", akt);
				if (smer==1)
				{
					
					if (akt==0) s=c;
					res[c++]=akt;
					akt=hn[akt];
					smer=0;
					
					continue;
					
				}else
				{
					if (akt==0) s=c;
					res[c++]=akt;
					akt=vn[akt];
					smer=1;
					
					continue;
					
				}
			}
			int r[1024];
			int l=0;
			for (int i=s; i>=0; i--)
			{
				//printf("a");
				r[l++]=res[i];
			}
			for (int i=count-1; i>s; i--)
			{
				//printf("b");
				r[l++]=res[i];
			}
			//printf(" ");
			for(int i=0; i<count; i++){
				int k=(i+1) % count;
				if (p[r[i]].x<p[r[k]].x)
				{
					printf("E");
				}if (p[r[i]].x>p[r[k]].x)
				{
					printf("W");
				}if (p[r[i]].y<p[r[k]].y)
				{
					printf("N");
				}if (p[r[i]].y>p[r[k]].y)
				{
					printf("S");
				}
				
			}
			printf("\n");
			
				
		}
	
	
	
	return 0;
}