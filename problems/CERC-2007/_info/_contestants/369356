#include <algorithm>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <string>
#include <set>
#include <stack>
#include <map>
#include <iostream>
#include <vector>
#include <queue>
using namespace std;

typedef long long LL;

struct para{

int a;
int b;
int ile; 
};

vector<para> tab;

vector<para> w[1000];

bool sort1(para a,para b) {
if (a.a == b.a )  return (a.b < b.b); else
 return a.a < b.a;
}
bool sort2(para a,para b) {
if (a.b == b.b )  return (a.a < b.a); else
 return a.b < b.b;
}


int main()
{
 int n,i;
while(true) {
  cin >> n;
  if (n==0) return 0;
  tab.clear();
   for(int ii=0;ii<n;ii++) {
       para p;
       cin >> p.a;
       cin >> p.b;
       p.ile = ii;
       tab.push_back(p);
    } 

para jed;
jed = tab[0];
//cout << jed.a << " " << jed.b << "\n";
//cout << jed.a << " " << n << "\n";
for (int y = 0;y<n;y++) w[y].clear();
  sort(tab.begin(),tab.end(),sort1);
  for(int j=0;j<n-1;j++)
{
 if (tab[j].a == tab[j+1].a) { w[tab[j].ile].push_back(tab[j+1]);w[tab[j+1].ile].push_back(tab[j]);}
 }
  sort(tab.begin(),tab.end(),sort2);
for(int j=0;j<n-1;j++)
{
 if (tab[j].b == tab[j+1].b) { w[tab[j].ile].push_back(tab[j+1]);w[tab[j+1].ile].push_back(tab[j]);}
 }
 
int gd;
gd = 0;

do {
   i = 0;

    if (w[gd][i+1].a < jed.a) { gd = w[gd][i+1].ile; jed = w[gd][i+1]; cout << "W";} else
    if (w[gd][i].b > jed.b) { gd = w[gd][i].ile;jed = w[gd][i];cout << "N";} else
    if (w[gd][i+1].a > jed.a) { gd = w[gd][i+1].ile;jed = w[gd][i+1];cout << "E";} else
    if (w[gd][i].b < jed.b) { gd = w[gd][i].ile;jed = w[gd][i];cout << "S";}

//cout << gd <<  "\n";
   } while (gd!=0);
cout << "\n";
  }
  return 0;

}
