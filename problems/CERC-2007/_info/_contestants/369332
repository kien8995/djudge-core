#include <cstdio>
#include <map>
#include <algorithm>

#define MP make_pair
#define X first
#define Y second

#define REP(a, b) for(int a=0; a<(b); a++)

using namespace std;

typedef pair<int, int> p;

p all[1000];
map<p, p> poziom, pion;

char kier(p p1, p p2) {
	if (p1.X==p2.X) {
		if (p1.Y<p2.Y) return 'N';
		else return 'S';
	} else if (p1.X<p2.X) return 'E';
	return 'W';
}

int main() {
	while(true) {
		int d;
		scanf("%d", &d);
		if(d==0) break;
		poziom.clear();
		pion.clear();
		REP(i, d) {
			int x, y;
			scanf("%d%d", &x, &y);
			all[i] = MP(x, y);
		}
		p start = all[0];
		sort(all, all+d);
		for(int i = 0; i<d; i+=2) {
			pion[all[i]] = all[i+1];
			pion[all[i+1]] = all[i];
		}
		REP(i, d) swap(all[i].X, all[i].Y);
		sort(all, all+d);
		REP(i, d) swap(all[i].X, all[i].Y);
		for(int i = 0; i<d; i+=2) {
			poziom[all[i]] = all[i+1];
			poziom[all[i+1]] = all[i];
		}
		if(kier(start, pion[start])=='N') {
			p akt = start;
			do {
				printf("%c", kier(akt, pion[akt]));
				akt = pion[akt];
				printf("%c", kier(akt, poziom[akt]));
				akt = poziom[akt];
			} while(akt!=start);
		} else {
			p akt = start;
			do {
				printf("%c", kier(akt, poziom[akt]));
				akt = poziom[akt];
				printf("%c", kier(akt, pion[akt]));
				akt = pion[akt];
			} while(akt!=start);
		}
		printf("\n");
	}
	return 0;
}
