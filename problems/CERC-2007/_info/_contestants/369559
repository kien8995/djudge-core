import java.util.*;

public class sort{

	static int MAXH = 100000;

	static int[] p;
	static ArrayList<Integer>[] h;

	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);

		while(true){
			int N = sc.nextInt();
			if(N == 0) break;
			
			p = new int[N];
			h = new ArrayList[MAXH];
			for(int i = 0; i < MAXH; i++)
				h[i] = new ArrayList<Integer>();

			int oldin = -1;
			int adder = 0;
			for(int i = 0; i < N; i++){	//vstup
				int in = sc.nextInt();
				if(in == oldin)
					adder++;
				else 	adder = 0;

				oldin = in;
				in += adder;

				p[i] = in;
				h[in%MAXH].add(i);

			}
			
			int curr = 0;
			int i = 0;
			while(true){

				//System.out.println("i: "+i+"\np: "+Arrays.toString(p));
				int v = najdi(curr++);

				if(i >= N) break;
				if(v == -1) continue;
				
				System.out.print(v+1);
				if(i < N-1) System.out.print(" ");
				else System.out.println();

				otoc(i, v);
				i++;
			}
		}
		
	}

	static int b;
	static int najdi(int i){
		int hodnota = i%MAXH;
		
		for(b = 0; b < h[hodnota].size(); b++){
			if(p[h[hodnota].get(b)] == i)
				return(h[hodnota].get(b));
		}

		return (-1);
	}

	static void otoc(int i, int v){

		if( v < i ){
			int pom = v;
			v = i; i = pom;
		}

		int max = (v+i)/2;

		

		for(int g = i; g <= max; g++){
			int g2 = v-g+i;

			najdi(p[g]);
			int l1 = b;
			najdi(p[g2]);
			int l2 = b;

			int m1 = p[g]%MAXH;
			int m2 = p[g2]%MAXH;

			int v1 = h[m1].get(l1);
			int v2 = h[m2].get(l2);
			h[m1].set(l1, v2);
			h[m2].set(l2, v1);

			int pom = p[g];
			p[g] = p[g2];
			p[g2] = pom;
		}
	}
}