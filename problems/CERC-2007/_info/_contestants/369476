#include <algorithm>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <string>
#include <set>
#include <stack>
#include <map>
#include <iostream>
#include <vector>
#include <queue>
using namespace std;

typedef long long LL;

struct para{

int a;
int b;
int ile; 
};





bool sort1(para a,para b) {
if (a.a == b.a )  return (a.b < b.b); else
 return a.a < b.a;
}
bool sort2(para a,para b) {
if (a.b == b.b )  return (a.a < b.a); else
 return a.b < b.b;
}


int main()
{
 int n,i;
while(true) {
  scanf("%d",&n);
  if (n==0) return 0;
  vector <para > tab(n);
   for(int ii=0;ii<n;ii++) {
       para p;
       scanf("%d",&p.a);
       scanf("%d",&p.b);
       p.ile = ii;
       tab[ii] = p;
    } 

para jed;
jed = tab[0];

//cout << jed.a << " " << n << "\n";
 para w[1000][2];

  sort(tab.begin(),tab.end(),sort1);
  for(int j=0;j<n-1;j+=2)
{

 if (tab[j].a == tab[j+1].a) { w[tab[j].ile][0] = tab[j+1];w[tab[j+1].ile][0] = tab[j]; 
//cout << tab[j].a << " " << tab[j].b << "\n" ;
}
 }
  sort(tab.begin(),tab.end(),sort2);
for(int j=0;j<n-1;j+=2)
{
 if (tab[j].b == tab[j+1].b) { w[tab[j].ile][1] = tab[j+1]; w[tab[j+1].ile][1] = tab[j];}
 }
 
int gd;
gd = tab[n-1].ile;
jed = tab[n-1];
   i = 0;
//u = 0;
//cout << gd<<" " << w[gd][0].a << " " << w[gd][0].b << "\n";
 //cout << gd<<" " << w[gd][1].a << " " << w[gd][1].b << "\n";

vector<char> odp;
odp.clear();
do {
   i = 0;
  //u += 1;
    if (w[gd][i].b < jed.b) { gd = w[gd][i].ile;jed = w[gd][i];odp.push_back('S');} else
    if (w[gd][i+1].a < jed.a) { gd = w[gd][i+1].ile; jed = w[gd][i+1]; odp.push_back('W');} else
    if (w[gd][i].b > jed.b) { gd = w[gd][i].ile;jed = w[gd][i];odp.push_back('N');} else
    if (w[gd][i+1].a > jed.a) { gd = w[gd][i+1].ile;jed = w[gd][i+1];odp.push_back('E');}

//cout << gd <<  "\n";
   } while (gd!=0);
vector<char> odp2;
if (odp.size()<n) {

odp2.clear();
do {
   i = 0;
  //u += 1;
    if (w[gd][i].b < jed.b) { gd = w[gd][i].ile;jed = w[gd][i];odp2.push_back('S');} else
    if (w[gd][i+1].a < jed.a) { gd = w[gd][i+1].ile; jed = w[gd][i+1]; odp2.push_back('W');} else
    if (w[gd][i].b > jed.b) { gd = w[gd][i].ile;jed = w[gd][i];odp2.push_back('N');} else
    if (w[gd][i+1].a > jed.a) { gd = w[gd][i+1].ile;jed = w[gd][i+1];odp2.push_back('E');}

//cout << gd <<  "\n";
   } while (gd!=tab[n-1].ile);

}


odp.push_back('\n');
for(int o=0;o<odp2.size();o++) cout << odp2[o];
//cout << " " ;
for(int o=0;o<odp.size();o++) cout << odp[o];
  }
  return 0;

}
