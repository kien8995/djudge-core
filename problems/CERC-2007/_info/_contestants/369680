#include <iostream>
#include <string>
#include <stdio.h>

using namespace std;

const int MAX = 100000;

int N;

int pole[MAX];

int min(int m)
{
	int pom = m;
	for(int i = m+1;i < N;i++)
	{
		if(pole[i] <= pole[pom]) 
		{
			pom = i;
		}
	}
	return pom;
}

void otoc(int m, int n)
{
	int pom;
	for(int i = 0;i < (n-m)/2 +1;i++)
	{
		pom = pole[m+i];
		pole[m+i] = pole[n-i];
		pole[n-i] = pom;
	}
}

void vypis()
{
	for (int i = 0;i < N;i++) cout << pole[i]<< " ";
	cout << endl;
}

int main()
{
	while (scanf("%d\n",&N))
	{
		int m = 0,n;
		if(N == 0) break;
		for(int i = 0; i< N;i++)
		{
			scanf("%d ",&pole[i]);
		}

		for(int i = 0;i < N;i++)
		{
			n = min(m);
			otoc(m,n);
			cout << (n+1) << " ";
			m++;
		}

		scanf("\n");
		cout << endl;
	}
	return 0;
}
